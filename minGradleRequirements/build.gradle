import java.util.regex.Matcher

defaultTasks("task4")

task task1 {
    doLast {
        logger.info("$name")
    }
}

task task2 {
    doLast {
        logger.info("$name")
    }
}

task task3 {
    doLast {
        logger.info("$name")
    }
}

task task4(dependsOn: ['task1', tasks.findAll { task -> task.name.startsWith("task2") }]) {
    doLast {
        logger.info("Task $name . Versions $version ")
    }
}

logger.info(">>>> ${tasks.findAll { task -> task.name.startsWith("task2") }}")

if (Math.random() > 0.5) {
    task1.dependsOn(task3, tasks.findAll { task -> task.name.startsWith("task2") })
}

gradle.taskGraph.whenReady {
    if (gradle.taskGraph.hasTask(task3)) {
        project.version("1.0")
    } else {
        project.version("1.0-SNAPSHOT")
    }
}

gradle.taskGraph.beforeTask { task ->
    logger.info("Before task $name")
}

gradle.taskGraph.afterTask { task ->
    logger.info("After task $name")
}


/*  Task & Actions


task hello {
    logger.info("Hello task")
    description("Hello description")
    group("Welcome Hello")

    doLast {
        logger.info("2 $name")
    }

    doFirst {
        logger.info("1 $name")
    }
}

hello.doLast { logger.info("3 $name")}
hello.doLast { logger.info("4 $name")}
hello.doFirst { logger.info("5 $name")}
hello.doFirst { logger.info("6 $name")}

task hello2 {
    description("Hello description")
    group("Welcome Hello2")
}

hello2.doFirst{
    logger.info("1 $name")
}.doLast{
    logger.info("2 $name")
}.doLast{
    logger.info("3 $name")
}.doLast{
    logger.info("4 $name")
}.doFirst{
    logger.info("5 $name")
}.doFirst{
    logger.info("6 $name")
}


task hi {
    logger.info("Hi task")
}

logger.info(hello.description)
logger.info(hello.group)

//hi.doLast {
//    logger.info("Hi task")
//}

/* gradle properties

if(hasProperty("gradlePropertiesProp")){
    logger.info("PropertyProp = $gradlePropertiesProp")
} else {
    logger.info("PropertyProp don't exist")
}

if(hasProperty("comandLineProp")){
    logger.info("ComandLineProp = $comandLineProp")
} else {
    logger.info("ComandLineProp don't exist")
}

project.ext.sayHello = 'Hello!'

if(hasProperty("sayHello")){
    logger.info("sayHello = $sayHello")
} else {
    logger.info("sayHello don't exist")
}

if(gradle.hasProperty("timestamp")){
    logger.info("timestamp = ${gradle.timestamp()}")
} else {
    logger.info("timestamp don't exist")
}



/* gradle unde the hood

logger.info "Info!"

apply {
    println("apply")
}

 */